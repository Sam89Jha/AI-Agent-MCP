{"ast":null,"code":"/**\n * Configuration for DAX App\n * Environment-specific settings for local, staging, and production\n */\n\nconst CONFIG = {\n  // API endpoints\n  API_BASE_URL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000',\n  WEBSOCKET_URL: process.env.REACT_APP_WEBSOCKET_URL || 'ws://localhost:8000/ws',\n  // Environment detection\n  isProduction: () => process.env.NODE_ENV === 'production',\n  isStaging: () => process.env.NODE_ENV === 'staging',\n  isLocal: () => process.env.NODE_ENV === 'development',\n  // Get API URL for endpoint\n  getApiUrl: (endpoint = '') => {\n    const baseUrl = CONFIG.API_BASE_URL;\n    return `${baseUrl}${endpoint}`;\n  },\n  // Get WebSocket URL\n  getWebsocketUrl: () => {\n    return CONFIG.WEBSOCKET_URL;\n  },\n  // Get WebSocket URL for specific booking\n  getWebsocketUrlForBooking: bookingCode => {\n    const baseUrl = CONFIG.WEBSOCKET_URL;\n    // For production, use API Gateway WebSocket endpoint\n    if (CONFIG.isProduction()) {\n      return `${baseUrl}?booking_code=${bookingCode}`;\n    }\n    // For local, use MCP server WebSocket\n    return `${baseUrl}/${bookingCode}`;\n  }\n};\n\n// API endpoints\nconst API_ENDPOINTS = {\n  AI_AGENT: CONFIG.getApiUrl('/api/v1/ai_agent'),\n  SEND_MESSAGE: CONFIG.getApiUrl('/api/v1/send_message'),\n  MAKE_CALL: CONFIG.getApiUrl('/api/v1/make_call'),\n  GET_MESSAGES: CONFIG.getApiUrl('/api/v1/get_message')\n};\nexport { CONFIG, API_ENDPOINTS };\n\n// Feature flags\nexport const FEATURES = CONFIG.features;\n\n// Debug logging\nif (CONFIG.isDebug()) {\n  console.log('ðŸ”§ DAX App Configuration:', CONFIG);\n  console.log('ðŸš€ Features:', FEATURES);\n}","map":{"version":3,"names":["CONFIG","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","WEBSOCKET_URL","REACT_APP_WEBSOCKET_URL","isProduction","NODE_ENV","isStaging","isLocal","getApiUrl","endpoint","baseUrl","getWebsocketUrl","getWebsocketUrlForBooking","bookingCode","API_ENDPOINTS","AI_AGENT","SEND_MESSAGE","MAKE_CALL","GET_MESSAGES","FEATURES","features","isDebug","console","log"],"sources":["/Users/sameer.jha/Python_Projects/NavieTakieSimulation/frontend/dax-app/src/config.js"],"sourcesContent":["/**\n * Configuration for DAX App\n * Environment-specific settings for local, staging, and production\n */\n\nconst CONFIG = {\n  // API endpoints\n  API_BASE_URL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000',\n  WEBSOCKET_URL: process.env.REACT_APP_WEBSOCKET_URL || 'ws://localhost:8000/ws',\n  \n  // Environment detection\n  isProduction: () => process.env.NODE_ENV === 'production',\n  isStaging: () => process.env.NODE_ENV === 'staging',\n  isLocal: () => process.env.NODE_ENV === 'development',\n  \n  // Get API URL for endpoint\n  getApiUrl: (endpoint = '') => {\n    const baseUrl = CONFIG.API_BASE_URL;\n    return `${baseUrl}${endpoint}`;\n  },\n  \n  // Get WebSocket URL\n  getWebsocketUrl: () => {\n    return CONFIG.WEBSOCKET_URL;\n  },\n  \n  // Get WebSocket URL for specific booking\n  getWebsocketUrlForBooking: (bookingCode) => {\n    const baseUrl = CONFIG.WEBSOCKET_URL;\n    // For production, use API Gateway WebSocket endpoint\n    if (CONFIG.isProduction()) {\n      return `${baseUrl}?booking_code=${bookingCode}`;\n    }\n    // For local, use MCP server WebSocket\n    return `${baseUrl}/${bookingCode}`;\n  }\n};\n\n// API endpoints\nconst API_ENDPOINTS = {\n  AI_AGENT: CONFIG.getApiUrl('/api/v1/ai_agent'),\n  SEND_MESSAGE: CONFIG.getApiUrl('/api/v1/send_message'),\n  MAKE_CALL: CONFIG.getApiUrl('/api/v1/make_call'),\n  GET_MESSAGES: CONFIG.getApiUrl('/api/v1/get_message'),\n};\n\nexport { CONFIG, API_ENDPOINTS };\n\n// Feature flags\nexport const FEATURES = CONFIG.features;\n\n// Debug logging\nif (CONFIG.isDebug()) {\n  console.log('ðŸ”§ DAX App Configuration:', CONFIG);\n  console.log('ðŸš€ Features:', FEATURES);\n} "],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAMA,MAAM,GAAG;EACb;EACAC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;EAC3EC,aAAa,EAAEH,OAAO,CAACC,GAAG,CAACG,uBAAuB,IAAI,wBAAwB;EAE9E;EACAC,YAAY,EAAEA,CAAA,KAAML,OAAO,CAACC,GAAG,CAACK,QAAQ,KAAK,YAAY;EACzDC,SAAS,EAAEA,CAAA,KAAMP,OAAO,CAACC,GAAG,CAACK,QAAQ,KAAK,SAAS;EACnDE,OAAO,EAAEA,CAAA,KAAMR,OAAO,CAACC,GAAG,CAACK,QAAQ,KAAK,aAAa;EAErD;EACAG,SAAS,EAAEA,CAACC,QAAQ,GAAG,EAAE,KAAK;IAC5B,MAAMC,OAAO,GAAGb,MAAM,CAACC,YAAY;IACnC,OAAO,GAAGY,OAAO,GAAGD,QAAQ,EAAE;EAChC,CAAC;EAED;EACAE,eAAe,EAAEA,CAAA,KAAM;IACrB,OAAOd,MAAM,CAACK,aAAa;EAC7B,CAAC;EAED;EACAU,yBAAyB,EAAGC,WAAW,IAAK;IAC1C,MAAMH,OAAO,GAAGb,MAAM,CAACK,aAAa;IACpC;IACA,IAAIL,MAAM,CAACO,YAAY,CAAC,CAAC,EAAE;MACzB,OAAO,GAAGM,OAAO,iBAAiBG,WAAW,EAAE;IACjD;IACA;IACA,OAAO,GAAGH,OAAO,IAAIG,WAAW,EAAE;EACpC;AACF,CAAC;;AAED;AACA,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAElB,MAAM,CAACW,SAAS,CAAC,kBAAkB,CAAC;EAC9CQ,YAAY,EAAEnB,MAAM,CAACW,SAAS,CAAC,sBAAsB,CAAC;EACtDS,SAAS,EAAEpB,MAAM,CAACW,SAAS,CAAC,mBAAmB,CAAC;EAChDU,YAAY,EAAErB,MAAM,CAACW,SAAS,CAAC,qBAAqB;AACtD,CAAC;AAED,SAASX,MAAM,EAAEiB,aAAa;;AAE9B;AACA,OAAO,MAAMK,QAAQ,GAAGtB,MAAM,CAACuB,QAAQ;;AAEvC;AACA,IAAIvB,MAAM,CAACwB,OAAO,CAAC,CAAC,EAAE;EACpBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE1B,MAAM,CAAC;EAChDyB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,QAAQ,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}